{"version":3,"sources":["task3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","promise","Promise","resolve","reject","setTimeout","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";AAKA,IAAMA,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAACC,GACfC,IAAAA,EAAQR,EAA0B,IAAK,KAepCS,OAbO,IAAIC,QAAQ,SAACC,EAASC,GAEpCC,WAAW,WACUV,KAAKE,SAAW,GAGjCM,EAAQ,CAAEG,GAAGP,EAAYO,GAAIC,KAAKP,IAElCI,EAAQL,EAAYO,KAErBN,MAMHQ,EAAa,SAAkB,GAAfF,IAAAA,EAAAA,EAAAA,GAAIC,EAAAA,EAAAA,KACxBE,QAAQC,IAAmBJ,eAAAA,OAAAA,EAAmBC,kBAAAA,OAAAA,EAA9C,QAGII,EAAW,SAAAL,GACfG,QAAQG,KAAqCN,gCAAAA,OAAAA,EAA7C,+BAeFR,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETb,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETb,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETb,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ","file":"task3.1ff4a1e9.js","sourceRoot":"..\\src","sourcesContent":["// Задание 3\r\n// Перепиши функцию makeTransaction() так, чтобы она не использовала \r\n//callback-функции onSuccess и onError, а принимала всего один параметр\r\n// transaction и возвращала промис.\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n    \r\n    const promise = new Promise((resolve, reject) => {\r\n\r\n      setTimeout(() => {\r\n        const canProcess = Math.random() > 0.3;\r\n\r\n        if (canProcess) {\r\n          resolve({ id:transaction.id, time:delay });\r\n        } else {\r\n          reject (transaction.id);\r\n        } \r\n      }, delay);\r\n      })\r\n\r\n      return promise;\r\n}; \r\n\r\nconst logSuccess = ({ id, time }) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n/*\r\n * Работает так\r\n \r\nmakeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\nmakeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\nmakeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\nmakeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\r\n*/\r\n\r\n/*\r\n * Должно работать так\r\n */\r\nmakeTransaction({ id: 70, amount: 150 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n"]}